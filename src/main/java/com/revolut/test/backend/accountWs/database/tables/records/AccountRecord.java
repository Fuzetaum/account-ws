/*
 * This file is generated by jOOQ.
 */
package com.revolut.test.backend.accountWs.database.tables.records;


import com.revolut.test.backend.accountWs.database.tables.Account;

import java.sql.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record5<String, String, UInteger, Integer, Date> {

    private static final long serialVersionUID = 1579434752;

    /**
     * Setter for <code>account.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>account.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>account.owner_name</code>.
     */
    public void setOwnerName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>account.owner_name</code>.
     */
    public String getOwnerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>account.currency</code>.
     */
    public void setCurrency(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>account.currency</code>.
     */
    public UInteger getCurrency() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>account.balance</code>.
     */
    public void setBalance(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>account.balance</code>.
     */
    public Integer getBalance() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>account.balance_last_update</code>.
     */
    public void setBalanceLastUpdate(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>account.balance_last_update</code>.
     */
    public Date getBalanceLastUpdate() {
        return (Date) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, UInteger, Integer, Date> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, UInteger, Integer, Date> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Account.ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.OWNER_NAME;
    }

    @Override
    public Field<UInteger> field3() {
        return Account.ACCOUNT.CURRENCY;
    }

    @Override
    public Field<Integer> field4() {
        return Account.ACCOUNT.BALANCE;
    }

    @Override
    public Field<Date> field5() {
        return Account.ACCOUNT.BALANCE_LAST_UPDATE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOwnerName();
    }

    @Override
    public UInteger component3() {
        return getCurrency();
    }

    @Override
    public Integer component4() {
        return getBalance();
    }

    @Override
    public Date component5() {
        return getBalanceLastUpdate();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOwnerName();
    }

    @Override
    public UInteger value3() {
        return getCurrency();
    }

    @Override
    public Integer value4() {
        return getBalance();
    }

    @Override
    public Date value5() {
        return getBalanceLastUpdate();
    }

    @Override
    public AccountRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value2(String value) {
        setOwnerName(value);
        return this;
    }

    @Override
    public AccountRecord value3(UInteger value) {
        setCurrency(value);
        return this;
    }

    @Override
    public AccountRecord value4(Integer value) {
        setBalance(value);
        return this;
    }

    @Override
    public AccountRecord value5(Date value) {
        setBalanceLastUpdate(value);
        return this;
    }

    @Override
    public AccountRecord values(String value1, String value2, UInteger value3, Integer value4, Date value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(String id, String ownerName, UInteger currency, Integer balance, Date balanceLastUpdate) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, ownerName);
        set(2, currency);
        set(3, balance);
        set(4, balanceLastUpdate);
    }
}
